with open_workbook('path_to_your_xlsb_file.xlsb') as wb:
    with wb.get_sheet(1) as sheet:  # Assuming the data is on the first sheet
        data = []
        for row in sheet.rows():
            data.append([item.v for item in row])

df = pd.DataFrame(data[1:], columns=data[0])


df['text'] = df.apply(lambda row: ' '.join([str(row[col]) for col in df.columns]), axis=1)
from sklearn.feature_extraction.text import TfidfVectorizer
from sklearn.metrics.pairwise import cosine_similarity

# Example summarized text
summarized_text = "This is the summary generated by Flan-T5."

# Combine summarized text and all text from the report data for TF-IDF calculation
all_text = [summarized_text] + df['text'].tolist()

# Tokenize text
vectorizer = TfidfVectorizer()
tfidf_matrix = vectorizer.fit_transform(all_text)

# Calculate cosine similarity between summarized text and each section
similarity_scores = cosine_similarity(tfidf_matrix[0:1], tfidf_matrix[1:])

# Find the index of the most relevant section
most_relevant_index = similarity_scores.argmax()

# Get the most relevant section from the report data
most_relevant_section = df.iloc[most_relevant_index - 1]

print("Most Relevant Section:")
print(most_relevant_section)
